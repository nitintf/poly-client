const path = require('path');

module.exports = {
  root: true,
  env: {
    browser: true,
    es2021: true,
    es6: true,
    node: true,
  },
  parser: '@typescript-eslint/parser',
  parserOptions: {
    project: './tsconfig.json',
    ecmaFeatures: {
      jsx: true,
    },
    ecmaVersion: 12,
    sourceType: 'module',
    createDefaultProgram: true,
    extraFileExtensions: ['.json']
  },
  settings: {
    react: {
      version: 'detect',
    },
    'import/extensions': ['.js', '.jsx', '.ts', '.tsx'],
    'import/parsers': {
      '@typescript-eslint/parser': ['.ts', '.tsx'],
    },
    'import/resolver': {
      node: {
        extensions: ['.js', '.jsx', '.ts', '.tsx'],
        moduleResolver: ['src/', 'config/**', 'test/**']
      },
      typescript: {}
    },
  },
  extends: [
    'airbnb',
    'airbnb-typescript',
    'airbnb/hooks',
    'eslint:recommended',
    'plugin:json/recommended',
    'plugin:i18n-json/recommended',
    'plugin:import/recommended',
    'plugin:import/typescript',
    'plugin:react/recommended',
    'plugin:@typescript-eslint/eslint-recommended',
    'plugin:@typescript-eslint/recommended',
    'plugin:@typescript-eslint/recommended-requiring-type-checking',
    'plugin:react/jsx-runtime',
    'plugin:jsx-a11y/strict',
    'plugin:prettier/recommended',
    'plugin:styled-components-a11y/recommended',
    'plugin:promise/recommended',
    'plugin:unicorn/recommended',
    'plugin:storybook/recommended',
    'plugin:jsdoc/recommended',
    'plugin:regexp/recommended',
    'plugin:testing-library/react',
    'plugin:security/recommended',
  ],
  plugins: [
    'i18n',
    'json',
    'react',
    'react-hooks',
    '@typescript-eslint',
    'jsx-a11y',
    'prettier',
    'styled-components-a11y',
    'promise',
    'unicorn',
    'import',
    'jsdoc',
    'unused-imports',
    'html',
    'regexp',
    'testing-library',
    'security',
  ],
  rules: {
    'i18n-json/identical-keys': [
      2,
      {
        filePath: path.resolve('./public/translations/en/translation.json'),
      },
    ],
    '@typescript-eslint/typedef': [
      'error',
      {
        arrayDestructuring: false,
        arrowParameter: false,
        memberVariableDeclaration: false,
        objectDestructuring: false,
        parameter: false,
        propertyDeclaration: false,
        variableDeclaration: false,
        variableDeclarationIgnoreFunction: false,
      },
    ],
    '@typescript-eslint/no-misused-promises': [
      'error',
      {
        checksVoidReturn: false,
      },
    ],
    '@typescript-eslint/no-explicit-any': 'off',
    '@typescript-eslint/no-unsafe-call': 'off',
    '@typescript-eslint/no-unsafe-assignment': 'off',
    '@typescript-eslint/no-unsafe-return': 'off',
    '@typescript-eslint/no-unsafe-argument': 'off',
    '@typescript-eslint/no-unsafe-member-access': 'off',
    '@typescript-eslint/no-floating-promises': 'off',
    '@typescript-eslint/restrict-template-expressions': 'warn',
    '@typescript-eslint/unbound-method': 'warn',
    '@typescript-eslint/naming-convention': 'warn',
    '@typescript-eslint/no-shadow': 'warn',
    // 'jsx-a11y/anchor-is-valid': 'off',
    'unicorn/filename-case': 'off',
    'unicorn/no-null': 'off',
    'unicorn/prefer-node-protocol': 'off',
    'unicorn/no-nested-ternary': 'off',
    'unicorn/consistent-destructuring': 'off',
    'import/prefer-default-export': 'off',
    'react/jsx-filename-extension': 'off',
    'react/jsx-props-no-spreading': 'off',
    'react/no-array-index-key': 'off',
    'react/no-unused-prop-types': 'warn',
    'import/extensions': 'off',
    'import/no-cycle': 'warn',
    'no-restricted-syntax': 'off',
    camelcase: 'off',
    'react/function-component-definition': 'off',
    'react/require-default-props': 'off',
    'no-param-reassign': 'warn',
    'no-continue': 'warn',
    'react-hooks/exhaustive-deps': 'warn',
    'no-underscore-dangle': 'off',
    'no-console': 'error',
    'consistent-return': 'warn',
    'promise/always-return': 'warn',
    'jsdoc/require-jsdoc': 'off',
    'testing-library/await-async-utils': 'warn',
  },
};
